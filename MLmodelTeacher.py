import os
import csv
import random
import metrics
import pickle
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn import linear_model
from sklearn import tree
from sklearn import svm

pathDatasetFile = "D:\\Daniel\\Documents\\magister\\eksperymenty\\data\\features.csv"

data = []
columns = ["FE1W", "FE1P", "FE3W", "FE3P", "FE4W", "FE4P", "FE5W", "FE5P", "FE9XW", "FE9XP", "FE9YW", "FE9YP", "FE9ZW", "FE9ZP", "FE10XW", "FE10XP", "FE10YW", "FE10YP", "FE10ZW", "FE10ZP", "FE11XW", "FE11XP", "FE11YW", "FE11YP", "FE11ZW", "FE11ZP",
                     "FE12XW", "FE12XP", "FE12YW", "FE12YP", "FE12ZW", "FE12ZP", "FE13XW", "FE13XP", "FE13YW", "FE13YP", "FE13ZW", "FE13ZP", "F14XW", "F14XP", "F14YW", "F14YP", "F14ZW", "F14ZP", "F15W", "F15P", "F16W", "F16P"]

test = [377.8941650780017	, 21.00439067628111, 	0.22486526575139448,	-0.38063650206860156,	0.14402747434622454,	0.07016217384396002,	0.33664742740088677,	-0.07589689269306023,	254.8095238095238,	-1.3330043717926623,	64.10714285714286,	8.752896776386336,	39.892857142857146,	-0.9744997211531097,	3161.6880524664957,	3.671149891418077,
        221.66509837467922,	10.206909140552336,	864.7309666381523,	7.362047932017274,	56.22888983846734,	1.9160245017791597,	14.888421621336468,	3.19482536933591,	29.406308279655782,	2.7133094058763874,	42808,	184.5719451904297,	10770,	895.6430053710938,	6806,	203.7853546142578,	248,	11.282684326171875,	120,
        21.266098022460938,	130,	13.60186767578125,	5880.0,	309.3986511230469,	840.0,	139.22589111328125,	1232.0,	149.3538818359375,	63.45407015396765,	3.3216257801617797,	65.17732824747672,	4.60869905331078]


"""with open(pathDatasetFile, 'r', newline='') as datasetfile:
    reader = csv.reader(datasetfile, delimiter=';')
    next(reader, None)
    for row in reader:
        data.append(row)
    random.shuffle(data)"""

#data = np.array(data)
#1
test = [1709.4466941089447,40.50119692681864,0.1762878123153268,-0.014039313214143433,-0.6306508722789238,0.20007880396972405,-0.4157359747081435,0.288097774663846,85.49659863945578,-4.618494014928837,91.83673469387755,-3.9222631171198175,159.97278911564626,-6.694646703134669,27067.443481502192,10.551945462882758,13127.206038579814,6.198132640963494,17169.917062715496,10.95704180755989,164.5218632325266,3.2483758192183916,114.57401991105931,2.489604916641091,131.03403017046944,3.310142263945749,15308,498.6571350097656,17040,434.94422912597656,27196,679.9820709228516,2040,19.073806762695312,1362,17.786529541015625,1408,36.35755920410156,5047.0,122.38482666015625,4753.0,31.287920633951824,5096.0,29.70311737060547,210.3267946416188,4.637778268788046,239.50901148557543,5.263755305046592]
#1
test = [1473.9633645379386,16.03285368986611,-0.6031566176530393,-0.40911227534753236,-0.20146865380924625,-0.529940558828419,0.2970286148935918,0.816696416890757,130.8427672955975,-0.3319960949467678,116.062893081761,5.326692618575751,75.86163522012579,-2.7973746505438113,30830.14600748348,12.346236687991718,32413.69222195685,24.65416350959658,23770.436430220525,20.067866645927136,175.58515315220555,3.51372120237103,180.03802993244747,4.965295913598361,154.1766403519694,4.479717250667405,26508,312.6332244873047,23494,641.6141815185547,16846,400.1852722167969,1470,16.042739868164062,2040,19.150405883789062,1678,15.146514892578125,4558.0,197.03564453125,477.0,122.63340759277344,318.0,125.87590026855469,233.66767520926808,5.693338505123233,294.98182089691704,7.55435416455407]
#0
test = [1487.2269497289242,43.60966122947301,0.31541216274048556,0.546157384849068,0.01955638926854556,-0.7030035290531841,0.2674910070875187,-0.7668647006676369,156.23611111111111,6.339407677743949,304.3888888888889,7.4247949637618715,-42.208333333333336,-1.6519601859298407,172306.3214840715,57.153957163548206,215356.77078477078,97.27938053151495,19782.865384615387,20.741073986875204,415.09796612856525,7.560023621890887,464.06548113899913,9.863031001244746,140.6515744121458,4.554236926958808,54926,733.2562408447266,61024,889.5320587158203,15718,371.1260681152344,1928,33.549957275390625,1576,39.97200012207031,804,23.20220947265625,15552.0,726.4527282714844,15648.0,314.4455261230469,7296.0,184.4454345703125,438.27980431305167,8.825816174746867,638.3149361040032,13.235347055590887]
#df = pd.DataFrame(data[:,0:48], columns=columns)
#y = data[:,48]
#X_train, X_test, y_train, y_test = train_test_split(df, y, test_size=0.2)

#clf = svm.SVC(kernel='linear', C=1).fit(X_train, y_train)

#pickle.dump(clf, open("SVM-48", 'wb'))
clf = pickle.load(open("SVM-48", 'rb'))

#print(clf.score(X_test, y_test))

print(clf.predict([test]))
